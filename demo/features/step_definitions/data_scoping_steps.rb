Given('there are multiple users with data in the system') do   create_list(:user, 5)   User.all.each do |user|     create_list(:user_data, 10, user: user)   end   end  Given('I am logged in as a specific user') do   @current_user = User.first   login_as(@current_user) end  When('I view my data') do   visit user_data_path   end  Then('I should only see data belonging to me') do   @current_user.user_data.each do |data|     expect(page).to have_content data.content   end end  Then('I should not see data belonging to other users') do   other_user_data = UserData.where.not(user: @current_user)   other_user_data.each do |data|     expect(page).to_not have_content data.content   end end  When('I attempt to view another user's data') do   other_user = User.where.not(id: @current_user.id).first   visit user_data_path(user_id: other_user.id) end  Given('there are {int} users with associated data') do |count|   create_list(:user, count) do |user|     create_list(:user_data, 10, user: user)   end end  When('I view a page displaying data') do   visit user_data_path end  Then('the number of database queries should be optimized') do   expect { page.find('.user-data') }.to make_database_queries(count: 2) end  Then('the page should load in a reasonable time') do   expect(page).to have_content 'User Data'   expect(page.response_time).to be < 500 end