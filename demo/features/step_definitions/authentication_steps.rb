Given('I am on the login page') do   visit '/login' end  When('I enter valid credentials') do   fill_in 'Email', with: 'user@example.com'    fill_in 'Password', with: 'password' end  When('I click the login button') do   click_button 'Log In' end  Then('I should be logged in') do   expect(page).to have_content 'Dashboard'  end  Then('I should see my dashboard') do   expect(current_path).to eq '/dashboard' end  When('I enter invalid credentials') do   fill_in 'Email', with: 'invalid@example.com'   fill_in 'Password', with: 'wrongpassword'  end  Then('I should see an invalid login error message') do   expect(page).to have_content 'Invalid email or password' end  Then('I should remain on the login page') do   expect(current_path).to eq '/login' end  Given('I am logged in') do   login_as(create(:user)) end  When('I click the logout button') do   click_link 'Log Out' end  Then('I should be logged out') do   expect(page).to_not have_content 'Dashboard' end  Then('I should be redirected to the login page') do   expect(current_path).to eq '/login' end  Given('I am not logged in') do   # No action needed end  When('I attempt to access a protected page') do   visit '/dashboard'  end  Then('I should see an access denied error message') do   expect(page).to have_content 'Access Denied' end