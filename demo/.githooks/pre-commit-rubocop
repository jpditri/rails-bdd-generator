#!/bin/bash
# Pre-commit hook for RuboCop auto-correction

set -e

echo "üé® Running RuboCop auto-correct on staged files..."

# Get staged Ruby files
staged_files=$(git diff --cached --name-only --diff-filter=ACM | grep "\.rb$" || true)

if [ -z "$staged_files" ]; then
  echo "No Ruby files staged for commit."
  exit 0
fi

# Check if rubocop is available
if ! command -v rubocop >/dev/null 2>&1; then
  echo "RuboCop not found, skipping..."
  exit 0
fi

# Run RuboCop with auto-correct on staged files
echo "Running RuboCop on staged files..."
for file in $staged_files; do
  if [ -f "$file" ]; then
    bundle exec rubocop -a "$file" > /dev/null 2>&1 || true

    # Re-stage the file if it was modified
    if ! git diff --quiet "$file"; then
      echo "  Auto-corrected: $file"
      git add "$file"
    fi
  fi
done

# Run final check without auto-correct
remaining_issues=$(bundle exec rubocop --format simple $staged_files 2>&1 | grep -E "^[CWE]:" || true)

if [ -n "$remaining_issues" ]; then
  echo "‚ö†Ô∏è  RuboCop issues that couldn't be auto-corrected:"
  bundle exec rubocop --format simple $staged_files
  echo ""
  read -p "Commit anyway? (y/N) " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    exit 1
  fi
else
  echo "‚úÖ RuboCop checks passed"
fi

exit 0
